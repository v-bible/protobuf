name: release-please
on:
  push:
    branches:
      - main

jobs:
  npm_publish:
    runs-on: ubuntu-latest

    # NOTE: We have to give write contents and packages permissions to the token
    permissions:
      contents: write
      packages: write
      pull-requests: write

    steps:
      # NOTE: You have to turn on "Allow Github Actions to create and approve
      # pull requests" in the org settings
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v4
        # NOTE: We are releasing per package so we have to prefix the output
        # with "path--", as well as other values like major and minor
        if: ${{ steps.release.outputs['pkg/ts--release_created' ]}}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false
        if: ${{ steps.release.outputs['pkg/ts--release_created'] }}

      # Setup for GitHub Packages
      - name: Setup Node.js for GitHub Packages
        uses: actions/setup-node@v4
        with:
          node-version: "latest"
          registry-url: "https://npm.pkg.github.com/"
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
        if: ${{ steps.release.outputs['pkg/ts--release_created'] }}

      # Install Dependencies
      - name: Install Dependencies
        run: pnpm install
        working-directory: pkg/ts
        if: ${{ steps.release.outputs['pkg/ts--release_created'] }}

      #  Publish to GitHub Packages
      - name: Publish to GitHub Packages
        run: pnpm publish --registry=https://npm.pkg.github.com/
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: pkg/ts
        if: ${{ steps.release.outputs['pkg/ts--release_created'] }}

      # Setup for npm Registry
      - name: Setup Node.js for npm
        uses: actions/setup-node@v4
        with:
          node-version: "latest"
          registry-url: "https://registry.npmjs.org/"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        if: ${{ steps.release.outputs['pkg/ts--release_created'] }}

      # Publish to npm
      - name: Publish to npm
        run: pnpm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        working-directory: pkg/ts
        if: ${{ steps.release.outputs['pkg/ts--release_created'] }}
