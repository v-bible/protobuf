// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: bible/v1/book.proto

package biblev1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Book struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Code      string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Title     string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Canon     string                 `protobuf:"bytes,4,opt,name=canon,proto3" json:"canon,omitempty"`
	Order     int32                  `protobuf:"varint,5,opt,name=order,proto3" json:"order,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Chapters  []*BookChapter         `protobuf:"bytes,8,rep,name=chapters,proto3" json:"chapters,omitempty"`
	VersionId string                 `protobuf:"bytes,9,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
}

func (x *Book) Reset() {
	*x = Book{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bible_v1_book_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Book) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Book) ProtoMessage() {}

func (x *Book) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_book_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Book.ProtoReflect.Descriptor instead.
func (*Book) Descriptor() ([]byte, []int) {
	return file_bible_v1_book_proto_rawDescGZIP(), []int{0}
}

func (x *Book) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Book) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Book) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Book) GetCanon() string {
	if x != nil {
		return x.Canon
	}
	return ""
}

func (x *Book) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *Book) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Book) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Book) GetChapters() []*BookChapter {
	if x != nil {
		return x.Chapters
	}
	return nil
}

func (x *Book) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

type BookChapter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Number    int32                  `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	Ref       string                 `protobuf:"bytes,3,opt,name=ref,proto3" json:"ref,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	BookId    string                 `protobuf:"bytes,6,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
}

func (x *BookChapter) Reset() {
	*x = BookChapter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bible_v1_book_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookChapter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookChapter) ProtoMessage() {}

func (x *BookChapter) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_book_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookChapter.ProtoReflect.Descriptor instead.
func (*BookChapter) Descriptor() ([]byte, []int) {
	return file_bible_v1_book_proto_rawDescGZIP(), []int{1}
}

func (x *BookChapter) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BookChapter) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *BookChapter) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *BookChapter) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BookChapter) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *BookChapter) GetBookId() string {
	if x != nil {
		return x.BookId
	}
	return ""
}

type BookVerse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Number    int32                  `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	Content   string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Order     int32                  `protobuf:"varint,4,opt,name=order,proto3" json:"order,omitempty"`
	ParNumber int32                  `protobuf:"varint,5,opt,name=par_number,json=parNumber,proto3" json:"par_number,omitempty"`
	ParIndex  int32                  `protobuf:"varint,6,opt,name=par_index,json=parIndex,proto3" json:"par_index,omitempty"`
	IsPoetry  bool                   `protobuf:"varint,7,opt,name=is_poetry,json=isPoetry,proto3" json:"is_poetry,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ChapterId string                 `protobuf:"bytes,10,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
}

func (x *BookVerse) Reset() {
	*x = BookVerse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bible_v1_book_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookVerse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookVerse) ProtoMessage() {}

func (x *BookVerse) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_book_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookVerse.ProtoReflect.Descriptor instead.
func (*BookVerse) Descriptor() ([]byte, []int) {
	return file_bible_v1_book_proto_rawDescGZIP(), []int{2}
}

func (x *BookVerse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BookVerse) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *BookVerse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *BookVerse) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *BookVerse) GetParNumber() int32 {
	if x != nil {
		return x.ParNumber
	}
	return 0
}

func (x *BookVerse) GetParIndex() int32 {
	if x != nil {
		return x.ParIndex
	}
	return 0
}

func (x *BookVerse) GetIsPoetry() bool {
	if x != nil {
		return x.IsPoetry
	}
	return false
}

func (x *BookVerse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BookVerse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *BookVerse) GetChapterId() string {
	if x != nil {
		return x.ChapterId
	}
	return ""
}

type BookFootnote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Content   string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Position  int32                  `protobuf:"varint,3,opt,name=position,proto3" json:"position,omitempty"`
	Order     int32                  `protobuf:"varint,4,opt,name=order,proto3" json:"order,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	VerseId   *string                `protobuf:"bytes,7,opt,name=verse_id,json=verseId,proto3,oneof" json:"verse_id,omitempty"`
	HeadingId *string                `protobuf:"bytes,8,opt,name=heading_id,json=headingId,proto3,oneof" json:"heading_id,omitempty"`
	ChapterId string                 `protobuf:"bytes,9,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
}

func (x *BookFootnote) Reset() {
	*x = BookFootnote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bible_v1_book_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookFootnote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookFootnote) ProtoMessage() {}

func (x *BookFootnote) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_book_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookFootnote.ProtoReflect.Descriptor instead.
func (*BookFootnote) Descriptor() ([]byte, []int) {
	return file_bible_v1_book_proto_rawDescGZIP(), []int{3}
}

func (x *BookFootnote) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BookFootnote) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *BookFootnote) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *BookFootnote) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *BookFootnote) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BookFootnote) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *BookFootnote) GetVerseId() string {
	if x != nil && x.VerseId != nil {
		return *x.VerseId
	}
	return ""
}

func (x *BookFootnote) GetHeadingId() string {
	if x != nil && x.HeadingId != nil {
		return *x.HeadingId
	}
	return ""
}

func (x *BookFootnote) GetChapterId() string {
	if x != nil {
		return x.ChapterId
	}
	return ""
}

type BookHeading struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Content   string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Order     int32                  `protobuf:"varint,3,opt,name=order,proto3" json:"order,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	VerseId   string                 `protobuf:"bytes,6,opt,name=verse_id,json=verseId,proto3" json:"verse_id,omitempty"`
	ChapterId string                 `protobuf:"bytes,7,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
}

func (x *BookHeading) Reset() {
	*x = BookHeading{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bible_v1_book_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookHeading) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookHeading) ProtoMessage() {}

func (x *BookHeading) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_book_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookHeading.ProtoReflect.Descriptor instead.
func (*BookHeading) Descriptor() ([]byte, []int) {
	return file_bible_v1_book_proto_rawDescGZIP(), []int{4}
}

func (x *BookHeading) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BookHeading) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *BookHeading) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *BookHeading) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BookHeading) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *BookHeading) GetVerseId() string {
	if x != nil {
		return x.VerseId
	}
	return ""
}

func (x *BookHeading) GetChapterId() string {
	if x != nil {
		return x.ChapterId
	}
	return ""
}

type BookReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Content   string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Position  *int32                 `protobuf:"varint,3,opt,name=position,proto3,oneof" json:"position,omitempty"`
	Order     int32                  `protobuf:"varint,4,opt,name=order,proto3" json:"order,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	VerseId   *string                `protobuf:"bytes,7,opt,name=verse_id,json=verseId,proto3,oneof" json:"verse_id,omitempty"`
	HeadingId *string                `protobuf:"bytes,8,opt,name=heading_id,json=headingId,proto3,oneof" json:"heading_id,omitempty"`
	ChapterId string                 `protobuf:"bytes,9,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
}

func (x *BookReference) Reset() {
	*x = BookReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bible_v1_book_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookReference) ProtoMessage() {}

func (x *BookReference) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_book_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookReference.ProtoReflect.Descriptor instead.
func (*BookReference) Descriptor() ([]byte, []int) {
	return file_bible_v1_book_proto_rawDescGZIP(), []int{5}
}

func (x *BookReference) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BookReference) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *BookReference) GetPosition() int32 {
	if x != nil && x.Position != nil {
		return *x.Position
	}
	return 0
}

func (x *BookReference) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *BookReference) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BookReference) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *BookReference) GetVerseId() string {
	if x != nil && x.VerseId != nil {
		return *x.VerseId
	}
	return ""
}

func (x *BookReference) GetHeadingId() string {
	if x != nil && x.HeadingId != nil {
		return *x.HeadingId
	}
	return ""
}

func (x *BookReference) GetChapterId() string {
	if x != nil {
		return x.ChapterId
	}
	return ""
}

type PsalmMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title     string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ChapterId string                 `protobuf:"bytes,5,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
}

func (x *PsalmMetadata) Reset() {
	*x = PsalmMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bible_v1_book_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PsalmMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PsalmMetadata) ProtoMessage() {}

func (x *PsalmMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_book_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PsalmMetadata.ProtoReflect.Descriptor instead.
func (*PsalmMetadata) Descriptor() ([]byte, []int) {
	return file_bible_v1_book_proto_rawDescGZIP(), []int{6}
}

func (x *PsalmMetadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PsalmMetadata) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PsalmMetadata) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PsalmMetadata) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *PsalmMetadata) GetChapterId() string {
	if x != nil {
		return x.ChapterId
	}
	return ""
}

type GetAllBookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Query params
	VersionCode string `protobuf:"bytes,1,opt,name=version_code,json=versionCode,proto3" json:"version_code,omitempty"`
	LangCode    string `protobuf:"bytes,2,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	WebOrigin   string `protobuf:"bytes,3,opt,name=web_origin,json=webOrigin,proto3" json:"web_origin,omitempty"`
}

func (x *GetAllBookRequest) Reset() {
	*x = GetAllBookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bible_v1_book_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllBookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllBookRequest) ProtoMessage() {}

func (x *GetAllBookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_book_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllBookRequest.ProtoReflect.Descriptor instead.
func (*GetAllBookRequest) Descriptor() ([]byte, []int) {
	return file_bible_v1_book_proto_rawDescGZIP(), []int{7}
}

func (x *GetAllBookRequest) GetVersionCode() string {
	if x != nil {
		return x.VersionCode
	}
	return ""
}

func (x *GetAllBookRequest) GetLangCode() string {
	if x != nil {
		return x.LangCode
	}
	return ""
}

func (x *GetAllBookRequest) GetWebOrigin() string {
	if x != nil {
		return x.WebOrigin
	}
	return ""
}

type GetAllBookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Books []*Book `protobuf:"bytes,1,rep,name=books,proto3" json:"books,omitempty"`
}

func (x *GetAllBookResponse) Reset() {
	*x = GetAllBookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bible_v1_book_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllBookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllBookResponse) ProtoMessage() {}

func (x *GetAllBookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_book_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllBookResponse.ProtoReflect.Descriptor instead.
func (*GetAllBookResponse) Descriptor() ([]byte, []int) {
	return file_bible_v1_book_proto_rawDescGZIP(), []int{8}
}

func (x *GetAllBookResponse) GetBooks() []*Book {
	if x != nil {
		return x.Books
	}
	return nil
}

type GetOneBookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookCode string `protobuf:"bytes,1,opt,name=book_code,json=bookCode,proto3" json:"book_code,omitempty"`
	// Query params
	VersionCode string `protobuf:"bytes,2,opt,name=version_code,json=versionCode,proto3" json:"version_code,omitempty"`
	LangCode    string `protobuf:"bytes,3,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	WebOrigin   string `protobuf:"bytes,4,opt,name=web_origin,json=webOrigin,proto3" json:"web_origin,omitempty"`
}

func (x *GetOneBookRequest) Reset() {
	*x = GetOneBookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bible_v1_book_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneBookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneBookRequest) ProtoMessage() {}

func (x *GetOneBookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_book_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneBookRequest.ProtoReflect.Descriptor instead.
func (*GetOneBookRequest) Descriptor() ([]byte, []int) {
	return file_bible_v1_book_proto_rawDescGZIP(), []int{9}
}

func (x *GetOneBookRequest) GetBookCode() string {
	if x != nil {
		return x.BookCode
	}
	return ""
}

func (x *GetOneBookRequest) GetVersionCode() string {
	if x != nil {
		return x.VersionCode
	}
	return ""
}

func (x *GetOneBookRequest) GetLangCode() string {
	if x != nil {
		return x.LangCode
	}
	return ""
}

func (x *GetOneBookRequest) GetWebOrigin() string {
	if x != nil {
		return x.WebOrigin
	}
	return ""
}

type GetOneBookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Book *Book `protobuf:"bytes,1,opt,name=book,proto3" json:"book,omitempty"`
}

func (x *GetOneBookResponse) Reset() {
	*x = GetOneBookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bible_v1_book_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneBookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneBookResponse) ProtoMessage() {}

func (x *GetOneBookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_book_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneBookResponse.ProtoReflect.Descriptor instead.
func (*GetOneBookResponse) Descriptor() ([]byte, []int) {
	return file_bible_v1_book_proto_rawDescGZIP(), []int{10}
}

func (x *GetOneBookResponse) GetBook() *Book {
	if x != nil {
		return x.Book
	}
	return nil
}

type GetOneChapterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookCode   string `protobuf:"bytes,1,opt,name=book_code,json=bookCode,proto3" json:"book_code,omitempty"`
	ChapterNum string `protobuf:"bytes,2,opt,name=chapter_num,json=chapterNum,proto3" json:"chapter_num,omitempty"`
	// Query params
	VersionCode string `protobuf:"bytes,3,opt,name=version_code,json=versionCode,proto3" json:"version_code,omitempty"`
	LangCode    string `protobuf:"bytes,4,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	WebOrigin   string `protobuf:"bytes,5,opt,name=web_origin,json=webOrigin,proto3" json:"web_origin,omitempty"`
}

func (x *GetOneChapterRequest) Reset() {
	*x = GetOneChapterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bible_v1_book_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneChapterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneChapterRequest) ProtoMessage() {}

func (x *GetOneChapterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_book_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneChapterRequest.ProtoReflect.Descriptor instead.
func (*GetOneChapterRequest) Descriptor() ([]byte, []int) {
	return file_bible_v1_book_proto_rawDescGZIP(), []int{11}
}

func (x *GetOneChapterRequest) GetBookCode() string {
	if x != nil {
		return x.BookCode
	}
	return ""
}

func (x *GetOneChapterRequest) GetChapterNum() string {
	if x != nil {
		return x.ChapterNum
	}
	return ""
}

func (x *GetOneChapterRequest) GetVersionCode() string {
	if x != nil {
		return x.VersionCode
	}
	return ""
}

func (x *GetOneChapterRequest) GetLangCode() string {
	if x != nil {
		return x.LangCode
	}
	return ""
}

func (x *GetOneChapterRequest) GetWebOrigin() string {
	if x != nil {
		return x.WebOrigin
	}
	return ""
}

type GetOneChapterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chapter       *BookChapter     `protobuf:"bytes,1,opt,name=chapter,proto3" json:"chapter,omitempty"`
	Verses        []*BookVerse     `protobuf:"bytes,2,rep,name=verses,proto3" json:"verses,omitempty"`
	Footnotes     []*BookFootnote  `protobuf:"bytes,3,rep,name=footnotes,proto3" json:"footnotes,omitempty"`
	Headings      []*BookHeading   `protobuf:"bytes,4,rep,name=headings,proto3" json:"headings,omitempty"`
	References    []*BookReference `protobuf:"bytes,5,rep,name=references,proto3" json:"references,omitempty"`
	PsalmMetadata []*PsalmMetadata `protobuf:"bytes,6,rep,name=psalm_metadata,json=psalmMetadata,proto3" json:"psalm_metadata,omitempty"`
}

func (x *GetOneChapterResponse) Reset() {
	*x = GetOneChapterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bible_v1_book_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneChapterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneChapterResponse) ProtoMessage() {}

func (x *GetOneChapterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_book_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneChapterResponse.ProtoReflect.Descriptor instead.
func (*GetOneChapterResponse) Descriptor() ([]byte, []int) {
	return file_bible_v1_book_proto_rawDescGZIP(), []int{12}
}

func (x *GetOneChapterResponse) GetChapter() *BookChapter {
	if x != nil {
		return x.Chapter
	}
	return nil
}

func (x *GetOneChapterResponse) GetVerses() []*BookVerse {
	if x != nil {
		return x.Verses
	}
	return nil
}

func (x *GetOneChapterResponse) GetFootnotes() []*BookFootnote {
	if x != nil {
		return x.Footnotes
	}
	return nil
}

func (x *GetOneChapterResponse) GetHeadings() []*BookHeading {
	if x != nil {
		return x.Headings
	}
	return nil
}

func (x *GetOneChapterResponse) GetReferences() []*BookReference {
	if x != nil {
		return x.References
	}
	return nil
}

func (x *GetOneChapterResponse) GetPsalmMetadata() []*PsalmMetadata {
	if x != nil {
		return x.PsalmMetadata
	}
	return nil
}

type GetOneChapterTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookCode   string `protobuf:"bytes,1,opt,name=book_code,json=bookCode,proto3" json:"book_code,omitempty"`
	ChapterNum string `protobuf:"bytes,2,opt,name=chapter_num,json=chapterNum,proto3" json:"chapter_num,omitempty"`
	// Query params
	VersionCode string `protobuf:"bytes,3,opt,name=version_code,json=versionCode,proto3" json:"version_code,omitempty"`
	LangCode    string `protobuf:"bytes,4,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	WebOrigin   string `protobuf:"bytes,5,opt,name=web_origin,json=webOrigin,proto3" json:"web_origin,omitempty"`
}

func (x *GetOneChapterTextRequest) Reset() {
	*x = GetOneChapterTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bible_v1_book_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneChapterTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneChapterTextRequest) ProtoMessage() {}

func (x *GetOneChapterTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_book_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneChapterTextRequest.ProtoReflect.Descriptor instead.
func (*GetOneChapterTextRequest) Descriptor() ([]byte, []int) {
	return file_bible_v1_book_proto_rawDescGZIP(), []int{13}
}

func (x *GetOneChapterTextRequest) GetBookCode() string {
	if x != nil {
		return x.BookCode
	}
	return ""
}

func (x *GetOneChapterTextRequest) GetChapterNum() string {
	if x != nil {
		return x.ChapterNum
	}
	return ""
}

func (x *GetOneChapterTextRequest) GetVersionCode() string {
	if x != nil {
		return x.VersionCode
	}
	return ""
}

func (x *GetOneChapterTextRequest) GetLangCode() string {
	if x != nil {
		return x.LangCode
	}
	return ""
}

func (x *GetOneChapterTextRequest) GetWebOrigin() string {
	if x != nil {
		return x.WebOrigin
	}
	return ""
}

type GetOneChapterTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *GetOneChapterTextResponse) Reset() {
	*x = GetOneChapterTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bible_v1_book_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneChapterTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneChapterTextResponse) ProtoMessage() {}

func (x *GetOneChapterTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_book_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneChapterTextResponse.ProtoReflect.Descriptor instead.
func (*GetOneChapterTextResponse) Descriptor() ([]byte, []int) {
	return file_bible_v1_book_proto_rawDescGZIP(), []int{14}
}

func (x *GetOneChapterTextResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type GetOneChapterHtmlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookCode   string `protobuf:"bytes,1,opt,name=book_code,json=bookCode,proto3" json:"book_code,omitempty"`
	ChapterNum string `protobuf:"bytes,2,opt,name=chapter_num,json=chapterNum,proto3" json:"chapter_num,omitempty"`
	// Query params
	VersionCode string `protobuf:"bytes,3,opt,name=version_code,json=versionCode,proto3" json:"version_code,omitempty"`
	LangCode    string `protobuf:"bytes,4,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	WebOrigin   string `protobuf:"bytes,5,opt,name=web_origin,json=webOrigin,proto3" json:"web_origin,omitempty"`
}

func (x *GetOneChapterHtmlRequest) Reset() {
	*x = GetOneChapterHtmlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bible_v1_book_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneChapterHtmlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneChapterHtmlRequest) ProtoMessage() {}

func (x *GetOneChapterHtmlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_book_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneChapterHtmlRequest.ProtoReflect.Descriptor instead.
func (*GetOneChapterHtmlRequest) Descriptor() ([]byte, []int) {
	return file_bible_v1_book_proto_rawDescGZIP(), []int{15}
}

func (x *GetOneChapterHtmlRequest) GetBookCode() string {
	if x != nil {
		return x.BookCode
	}
	return ""
}

func (x *GetOneChapterHtmlRequest) GetChapterNum() string {
	if x != nil {
		return x.ChapterNum
	}
	return ""
}

func (x *GetOneChapterHtmlRequest) GetVersionCode() string {
	if x != nil {
		return x.VersionCode
	}
	return ""
}

func (x *GetOneChapterHtmlRequest) GetLangCode() string {
	if x != nil {
		return x.LangCode
	}
	return ""
}

func (x *GetOneChapterHtmlRequest) GetWebOrigin() string {
	if x != nil {
		return x.WebOrigin
	}
	return ""
}

type GetOneChapterHtmlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Html string `protobuf:"bytes,1,opt,name=html,proto3" json:"html,omitempty"`
}

func (x *GetOneChapterHtmlResponse) Reset() {
	*x = GetOneChapterHtmlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bible_v1_book_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneChapterHtmlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneChapterHtmlResponse) ProtoMessage() {}

func (x *GetOneChapterHtmlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_book_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneChapterHtmlResponse.ProtoReflect.Descriptor instead.
func (*GetOneChapterHtmlResponse) Descriptor() ([]byte, []int) {
	return file_bible_v1_book_proto_rawDescGZIP(), []int{16}
}

func (x *GetOneChapterHtmlResponse) GetHtml() string {
	if x != nil {
		return x.Html
	}
	return ""
}

type GetBiblicalReferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// Query params
	VersionCode string `protobuf:"bytes,2,opt,name=version_code,json=versionCode,proto3" json:"version_code,omitempty"`
	LangCode    string `protobuf:"bytes,3,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	WebOrigin   string `protobuf:"bytes,4,opt,name=web_origin,json=webOrigin,proto3" json:"web_origin,omitempty"`
	Format      string `protobuf:"bytes,5,opt,name=format,proto3" json:"format,omitempty"`
}

func (x *GetBiblicalReferenceRequest) Reset() {
	*x = GetBiblicalReferenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bible_v1_book_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBiblicalReferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBiblicalReferenceRequest) ProtoMessage() {}

func (x *GetBiblicalReferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_book_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBiblicalReferenceRequest.ProtoReflect.Descriptor instead.
func (*GetBiblicalReferenceRequest) Descriptor() ([]byte, []int) {
	return file_bible_v1_book_proto_rawDescGZIP(), []int{17}
}

func (x *GetBiblicalReferenceRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetBiblicalReferenceRequest) GetVersionCode() string {
	if x != nil {
		return x.VersionCode
	}
	return ""
}

func (x *GetBiblicalReferenceRequest) GetLangCode() string {
	if x != nil {
		return x.LangCode
	}
	return ""
}

func (x *GetBiblicalReferenceRequest) GetWebOrigin() string {
	if x != nil {
		return x.WebOrigin
	}
	return ""
}

func (x *GetBiblicalReferenceRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

type GetBiblicalReferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chapters      []*BookChapter   `protobuf:"bytes,1,rep,name=chapters,proto3" json:"chapters,omitempty"`
	Verses        []*BookVerse     `protobuf:"bytes,2,rep,name=verses,proto3" json:"verses,omitempty"`
	Footnotes     []*BookFootnote  `protobuf:"bytes,3,rep,name=footnotes,proto3" json:"footnotes,omitempty"`
	Headings      []*BookHeading   `protobuf:"bytes,4,rep,name=headings,proto3" json:"headings,omitempty"`
	References    []*BookReference `protobuf:"bytes,5,rep,name=references,proto3" json:"references,omitempty"`
	PsalmMetadata []*PsalmMetadata `protobuf:"bytes,6,rep,name=psalm_metadata,json=psalmMetadata,proto3" json:"psalm_metadata,omitempty"`
}

func (x *GetBiblicalReferenceResponse) Reset() {
	*x = GetBiblicalReferenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bible_v1_book_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBiblicalReferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBiblicalReferenceResponse) ProtoMessage() {}

func (x *GetBiblicalReferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_book_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBiblicalReferenceResponse.ProtoReflect.Descriptor instead.
func (*GetBiblicalReferenceResponse) Descriptor() ([]byte, []int) {
	return file_bible_v1_book_proto_rawDescGZIP(), []int{18}
}

func (x *GetBiblicalReferenceResponse) GetChapters() []*BookChapter {
	if x != nil {
		return x.Chapters
	}
	return nil
}

func (x *GetBiblicalReferenceResponse) GetVerses() []*BookVerse {
	if x != nil {
		return x.Verses
	}
	return nil
}

func (x *GetBiblicalReferenceResponse) GetFootnotes() []*BookFootnote {
	if x != nil {
		return x.Footnotes
	}
	return nil
}

func (x *GetBiblicalReferenceResponse) GetHeadings() []*BookHeading {
	if x != nil {
		return x.Headings
	}
	return nil
}

func (x *GetBiblicalReferenceResponse) GetReferences() []*BookReference {
	if x != nil {
		return x.References
	}
	return nil
}

func (x *GetBiblicalReferenceResponse) GetPsalmMetadata() []*PsalmMetadata {
	if x != nil {
		return x.PsalmMetadata
	}
	return nil
}

type GetBiblicalReferenceTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// Query params
	VersionCode string `protobuf:"bytes,2,opt,name=version_code,json=versionCode,proto3" json:"version_code,omitempty"`
	LangCode    string `protobuf:"bytes,3,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	WebOrigin   string `protobuf:"bytes,4,opt,name=web_origin,json=webOrigin,proto3" json:"web_origin,omitempty"`
	Format      string `protobuf:"bytes,5,opt,name=format,proto3" json:"format,omitempty"`
}

func (x *GetBiblicalReferenceTextRequest) Reset() {
	*x = GetBiblicalReferenceTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bible_v1_book_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBiblicalReferenceTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBiblicalReferenceTextRequest) ProtoMessage() {}

func (x *GetBiblicalReferenceTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_book_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBiblicalReferenceTextRequest.ProtoReflect.Descriptor instead.
func (*GetBiblicalReferenceTextRequest) Descriptor() ([]byte, []int) {
	return file_bible_v1_book_proto_rawDescGZIP(), []int{19}
}

func (x *GetBiblicalReferenceTextRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetBiblicalReferenceTextRequest) GetVersionCode() string {
	if x != nil {
		return x.VersionCode
	}
	return ""
}

func (x *GetBiblicalReferenceTextRequest) GetLangCode() string {
	if x != nil {
		return x.LangCode
	}
	return ""
}

func (x *GetBiblicalReferenceTextRequest) GetWebOrigin() string {
	if x != nil {
		return x.WebOrigin
	}
	return ""
}

func (x *GetBiblicalReferenceTextRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

type GetBiblicalReferenceTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *GetBiblicalReferenceTextResponse) Reset() {
	*x = GetBiblicalReferenceTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bible_v1_book_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBiblicalReferenceTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBiblicalReferenceTextResponse) ProtoMessage() {}

func (x *GetBiblicalReferenceTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_book_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBiblicalReferenceTextResponse.ProtoReflect.Descriptor instead.
func (*GetBiblicalReferenceTextResponse) Descriptor() ([]byte, []int) {
	return file_bible_v1_book_proto_rawDescGZIP(), []int{20}
}

func (x *GetBiblicalReferenceTextResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type GetBiblicalReferenceHtmlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// Query params
	VersionCode string `protobuf:"bytes,2,opt,name=version_code,json=versionCode,proto3" json:"version_code,omitempty"`
	LangCode    string `protobuf:"bytes,3,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	WebOrigin   string `protobuf:"bytes,4,opt,name=web_origin,json=webOrigin,proto3" json:"web_origin,omitempty"`
	Format      string `protobuf:"bytes,5,opt,name=format,proto3" json:"format,omitempty"`
}

func (x *GetBiblicalReferenceHtmlRequest) Reset() {
	*x = GetBiblicalReferenceHtmlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bible_v1_book_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBiblicalReferenceHtmlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBiblicalReferenceHtmlRequest) ProtoMessage() {}

func (x *GetBiblicalReferenceHtmlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_book_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBiblicalReferenceHtmlRequest.ProtoReflect.Descriptor instead.
func (*GetBiblicalReferenceHtmlRequest) Descriptor() ([]byte, []int) {
	return file_bible_v1_book_proto_rawDescGZIP(), []int{21}
}

func (x *GetBiblicalReferenceHtmlRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetBiblicalReferenceHtmlRequest) GetVersionCode() string {
	if x != nil {
		return x.VersionCode
	}
	return ""
}

func (x *GetBiblicalReferenceHtmlRequest) GetLangCode() string {
	if x != nil {
		return x.LangCode
	}
	return ""
}

func (x *GetBiblicalReferenceHtmlRequest) GetWebOrigin() string {
	if x != nil {
		return x.WebOrigin
	}
	return ""
}

func (x *GetBiblicalReferenceHtmlRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

type GetBiblicalReferenceHtmlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Html string `protobuf:"bytes,1,opt,name=html,proto3" json:"html,omitempty"`
}

func (x *GetBiblicalReferenceHtmlResponse) Reset() {
	*x = GetBiblicalReferenceHtmlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bible_v1_book_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBiblicalReferenceHtmlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBiblicalReferenceHtmlResponse) ProtoMessage() {}

func (x *GetBiblicalReferenceHtmlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_book_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBiblicalReferenceHtmlResponse.ProtoReflect.Descriptor instead.
func (*GetBiblicalReferenceHtmlResponse) Descriptor() ([]byte, []int) {
	return file_bible_v1_book_proto_rawDescGZIP(), []int{22}
}

func (x *GetBiblicalReferenceHtmlResponse) GetHtml() string {
	if x != nil {
		return x.Html
	}
	return ""
}

var File_bible_v1_book_proto protoreflect.FileDescriptor

var file_bible_v1_book_proto_rawDesc = []byte{
	0x0a, 0x13, 0x62, 0x69, 0x62, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x62, 0x69, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb4,
	0x02, 0x0a, 0x04, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xd6, 0x01, 0x0a, 0x0b, 0x42, 0x6f, 0x6f, 0x6b, 0x43, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x72, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x22, 0xd1,
	0x02, 0x0a, 0x09, 0x42, 0x6f, 0x6f, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x72, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x6f, 0x65, 0x74, 0x72, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x6f, 0x65, 0x74, 0x72, 0x79, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x22, 0xdf, 0x02, 0x0a, 0x0c, 0x42, 0x6f, 0x6f, 0x6b, 0x46, 0x6f, 0x6f, 0x74, 0x6e,
	0x6f, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x68, 0x65, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x69, 0x64, 0x22, 0xfd, 0x01, 0x0a, 0x0b, 0x42, 0x6f, 0x6f, 0x6b, 0x48, 0x65, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x22, 0xf2, 0x02, 0x0a, 0x0d, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x1f, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a,
	0x08, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a,
	0x0a, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x09, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x68,
	0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x22, 0xca, 0x01, 0x0a, 0x0d, 0x50, 0x73,
	0x61, 0x6c, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x72, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x77,
	0x65, 0x62, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x77, 0x65, 0x62, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0x3a, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x24, 0x0a, 0x05, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x52,
	0x05, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4f, 0x6e,
	0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x6c, 0x61, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x65, 0x62,
	0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77,
	0x65, 0x62, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0x38, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4f,
	0x6e, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22,
	0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62,
	0x69, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x04, 0x62, 0x6f,
	0x6f, 0x6b, 0x22, 0xb3, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x68, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62,
	0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x6c, 0x61, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x65, 0x62,
	0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77,
	0x65, 0x62, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0xd7, 0x02, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x4f, 0x6e, 0x65, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x6f, 0x6f, 0x6b, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x07, 0x63, 0x68, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x06, 0x76, 0x65, 0x72, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x6f, 0x6f, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x65, 0x52, 0x06, 0x76, 0x65, 0x72, 0x73, 0x65, 0x73,
	0x12, 0x34, 0x0a, 0x09, 0x66, 0x6f, 0x6f, 0x74, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x6f, 0x6f, 0x6b, 0x46, 0x6f, 0x6f, 0x74, 0x6e, 0x6f, 0x74, 0x65, 0x52, 0x09, 0x66, 0x6f, 0x6f,
	0x74, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52,
	0x08, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x37, 0x0a, 0x0a, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x62, 0x69, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0e, 0x70, 0x73, 0x61, 0x6c, 0x6d, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x69, 0x62,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x73, 0x61, 0x6c, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x0d, 0x70, 0x73, 0x61, 0x6c, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xb7, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x68, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x21, 0x0a,
	0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x77, 0x65, 0x62, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x77, 0x65, 0x62, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0x2f, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x54, 0x65, 0x78,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0xb7, 0x01,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x48,
	0x74, 0x6d, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f,
	0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62,
	0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x61, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x65, 0x62, 0x5f,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x65,
	0x62, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0x2f, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4f, 0x6e,
	0x65, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x48, 0x74, 0x6d, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x74, 0x6d, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x74, 0x6d, 0x6c, 0x22, 0xaa, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x42, 0x69, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x21,
	0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x77, 0x65, 0x62, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x77, 0x65, 0x62, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0xe0, 0x02, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x42, 0x69, 0x62,
	0x6c, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52,
	0x08, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x76, 0x65, 0x72,
	0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x69, 0x62, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x65, 0x52, 0x06,
	0x76, 0x65, 0x72, 0x73, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x66, 0x6f, 0x6f, 0x74, 0x6e, 0x6f,
	0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x69, 0x62, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x46, 0x6f, 0x6f, 0x74, 0x6e, 0x6f, 0x74,
	0x65, 0x52, 0x09, 0x66, 0x6f, 0x6f, 0x74, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x08,
	0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x62, 0x69, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x48, 0x65,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x37, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0e, 0x70, 0x73, 0x61, 0x6c,
	0x6d, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x73, 0x61, 0x6c,
	0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x70, 0x73, 0x61, 0x6c, 0x6d,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xae, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74,
	0x42, 0x69, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x65, 0x62, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x65, 0x62, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x36, 0x0a, 0x20, 0x47, 0x65, 0x74,
	0x42, 0x69, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x22, 0xae, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x42, 0x69, 0x62, 0x6c, 0x69, 0x63, 0x61,
	0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x74, 0x6d, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x77,
	0x65, 0x62, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x77, 0x65, 0x62, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x22, 0x36, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x42, 0x69, 0x62, 0x6c, 0x69, 0x63, 0x61,
	0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x74, 0x6d, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x74, 0x6d, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x74, 0x6d, 0x6c, 0x32, 0xba, 0x08, 0x0a, 0x0b, 0x42,
	0x6f, 0x6f, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x59, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x1b, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x2f, 0x76, 0x31,
	0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x65, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x42,
	0x6f, 0x6f, 0x6b, 0x12, 0x1b, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x6e, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f,
	0x6e, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x6b,
	0x2f, 0x7b, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x7d, 0x12, 0x84, 0x01, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x12, 0x1e,
	0x2e, 0x62, 0x69, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65,
	0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x62, 0x69, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65,
	0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f,
	0x6b, 0x2f, 0x7b, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x7d, 0x2f, 0x63, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x2f, 0x7b, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x6e,
	0x75, 0x6d, 0x7d, 0x12, 0x95, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x22, 0x2e, 0x62, 0x69, 0x62, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x62, 0x69, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x43,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x12, 0x2f, 0x2f, 0x76, 0x31, 0x2f,
	0x62, 0x6f, 0x6f, 0x6b, 0x2f, 0x7b, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x7d,
	0x2f, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2f, 0x7b, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x7d, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x12, 0x95, 0x01, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x48, 0x74, 0x6d,
	0x6c, 0x12, 0x22, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4f, 0x6e, 0x65, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x48, 0x74, 0x6d, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x48, 0x74,
	0x6d, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x31, 0x12, 0x2f, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x2f, 0x7b, 0x62, 0x6f,
	0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x7d, 0x2f, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x2f, 0x7b, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x7d, 0x2f, 0x68,
	0x74, 0x6d, 0x6c, 0x12, 0x83, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x69, 0x62, 0x6c, 0x69,
	0x63, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x2e, 0x62,
	0x69, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x69, 0x62, 0x6c, 0x69,
	0x63, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x69, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x72, 0x65,
	0x66, 0x2f, 0x7b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x7d, 0x12, 0x94, 0x01, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x42, 0x69, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x29, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x69, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x69, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x6f, 0x73, 0x73,
	0x72, 0x65, 0x66, 0x2f, 0x7b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x7d, 0x2f, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x94, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x42, 0x69, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x6c,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x29, 0x2e,
	0x62, 0x69, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x69, 0x62, 0x6c,
	0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x74, 0x6d,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x69, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x6c, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x74, 0x6d, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x72, 0x65, 0x66, 0x2f, 0x7b, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x7d, 0x2f, 0x68, 0x74, 0x6d, 0x6c, 0x42, 0xf1, 0x02, 0x92, 0x41, 0xdb, 0x01, 0x12, 0x6a,
	0x0a, 0x15, 0x42, 0x69, 0x62, 0x6c, 0x65, 0x20, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x20, 0x41, 0x50, 0x49, 0x12, 0x15, 0x42, 0x69, 0x62, 0x6c, 0x65, 0x20, 0x42,
	0x6f, 0x6f, 0x6b, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x20, 0x41, 0x50, 0x49, 0x22, 0x33,
	0x0a, 0x0e, 0x44, 0x75, 0x63, 0x6b, 0x79, 0x4d, 0x6f, 0x6d, 0x6f, 0x32, 0x30, 0x30, 0x31, 0x32,
	0x12, 0x21, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x75, 0x63, 0x6b, 0x79, 0x4d, 0x6f, 0x6d, 0x6f, 0x32, 0x30,
	0x30, 0x31, 0x32, 0x32, 0x05, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x22, 0x04, 0x2f, 0x61, 0x70, 0x69,
	0x5a, 0x59, 0x0a, 0x57, 0x0a, 0x06, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x4d, 0x08, 0x02,
	0x12, 0x38, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2c, 0x20, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x20, 0x62, 0x79, 0x20, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x3a, 0x20, 0x42, 0x65, 0x61, 0x72,
	0x65, 0x72, 0x20, 0x3c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x3e, 0x1a, 0x0d, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02, 0x62, 0x0c, 0x0a, 0x0a, 0x0a,
	0x06, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x00, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x2e, 0x62,
	0x69, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x09, 0x42, 0x6f, 0x6f, 0x6b, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x76, 0x2d, 0x62, 0x69, 0x62, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x69, 0x62, 0x6c,
	0x65, 0x2f, 0x76, 0x31, 0x3b, 0x62, 0x69, 0x62, 0x6c, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x42,
	0x58, 0x58, 0xaa, 0x02, 0x08, 0x42, 0x69, 0x62, 0x6c, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x08,
	0x42, 0x69, 0x62, 0x6c, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x14, 0x42, 0x69, 0x62, 0x6c, 0x65,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x09, 0x42, 0x69, 0x62, 0x6c, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_bible_v1_book_proto_rawDescOnce sync.Once
	file_bible_v1_book_proto_rawDescData = file_bible_v1_book_proto_rawDesc
)

func file_bible_v1_book_proto_rawDescGZIP() []byte {
	file_bible_v1_book_proto_rawDescOnce.Do(func() {
		file_bible_v1_book_proto_rawDescData = protoimpl.X.CompressGZIP(file_bible_v1_book_proto_rawDescData)
	})
	return file_bible_v1_book_proto_rawDescData
}

var file_bible_v1_book_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_bible_v1_book_proto_goTypes = []any{
	(*Book)(nil),                             // 0: bible.v1.Book
	(*BookChapter)(nil),                      // 1: bible.v1.BookChapter
	(*BookVerse)(nil),                        // 2: bible.v1.BookVerse
	(*BookFootnote)(nil),                     // 3: bible.v1.BookFootnote
	(*BookHeading)(nil),                      // 4: bible.v1.BookHeading
	(*BookReference)(nil),                    // 5: bible.v1.BookReference
	(*PsalmMetadata)(nil),                    // 6: bible.v1.PsalmMetadata
	(*GetAllBookRequest)(nil),                // 7: bible.v1.GetAllBookRequest
	(*GetAllBookResponse)(nil),               // 8: bible.v1.GetAllBookResponse
	(*GetOneBookRequest)(nil),                // 9: bible.v1.GetOneBookRequest
	(*GetOneBookResponse)(nil),               // 10: bible.v1.GetOneBookResponse
	(*GetOneChapterRequest)(nil),             // 11: bible.v1.GetOneChapterRequest
	(*GetOneChapterResponse)(nil),            // 12: bible.v1.GetOneChapterResponse
	(*GetOneChapterTextRequest)(nil),         // 13: bible.v1.GetOneChapterTextRequest
	(*GetOneChapterTextResponse)(nil),        // 14: bible.v1.GetOneChapterTextResponse
	(*GetOneChapterHtmlRequest)(nil),         // 15: bible.v1.GetOneChapterHtmlRequest
	(*GetOneChapterHtmlResponse)(nil),        // 16: bible.v1.GetOneChapterHtmlResponse
	(*GetBiblicalReferenceRequest)(nil),      // 17: bible.v1.GetBiblicalReferenceRequest
	(*GetBiblicalReferenceResponse)(nil),     // 18: bible.v1.GetBiblicalReferenceResponse
	(*GetBiblicalReferenceTextRequest)(nil),  // 19: bible.v1.GetBiblicalReferenceTextRequest
	(*GetBiblicalReferenceTextResponse)(nil), // 20: bible.v1.GetBiblicalReferenceTextResponse
	(*GetBiblicalReferenceHtmlRequest)(nil),  // 21: bible.v1.GetBiblicalReferenceHtmlRequest
	(*GetBiblicalReferenceHtmlResponse)(nil), // 22: bible.v1.GetBiblicalReferenceHtmlResponse
	(*timestamppb.Timestamp)(nil),            // 23: google.protobuf.Timestamp
}
var file_bible_v1_book_proto_depIdxs = []int32{
	23, // 0: bible.v1.Book.created_at:type_name -> google.protobuf.Timestamp
	23, // 1: bible.v1.Book.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 2: bible.v1.Book.chapters:type_name -> bible.v1.BookChapter
	23, // 3: bible.v1.BookChapter.created_at:type_name -> google.protobuf.Timestamp
	23, // 4: bible.v1.BookChapter.updated_at:type_name -> google.protobuf.Timestamp
	23, // 5: bible.v1.BookVerse.created_at:type_name -> google.protobuf.Timestamp
	23, // 6: bible.v1.BookVerse.updated_at:type_name -> google.protobuf.Timestamp
	23, // 7: bible.v1.BookFootnote.created_at:type_name -> google.protobuf.Timestamp
	23, // 8: bible.v1.BookFootnote.updated_at:type_name -> google.protobuf.Timestamp
	23, // 9: bible.v1.BookHeading.created_at:type_name -> google.protobuf.Timestamp
	23, // 10: bible.v1.BookHeading.updated_at:type_name -> google.protobuf.Timestamp
	23, // 11: bible.v1.BookReference.created_at:type_name -> google.protobuf.Timestamp
	23, // 12: bible.v1.BookReference.updated_at:type_name -> google.protobuf.Timestamp
	23, // 13: bible.v1.PsalmMetadata.created_at:type_name -> google.protobuf.Timestamp
	23, // 14: bible.v1.PsalmMetadata.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 15: bible.v1.GetAllBookResponse.books:type_name -> bible.v1.Book
	0,  // 16: bible.v1.GetOneBookResponse.book:type_name -> bible.v1.Book
	1,  // 17: bible.v1.GetOneChapterResponse.chapter:type_name -> bible.v1.BookChapter
	2,  // 18: bible.v1.GetOneChapterResponse.verses:type_name -> bible.v1.BookVerse
	3,  // 19: bible.v1.GetOneChapterResponse.footnotes:type_name -> bible.v1.BookFootnote
	4,  // 20: bible.v1.GetOneChapterResponse.headings:type_name -> bible.v1.BookHeading
	5,  // 21: bible.v1.GetOneChapterResponse.references:type_name -> bible.v1.BookReference
	6,  // 22: bible.v1.GetOneChapterResponse.psalm_metadata:type_name -> bible.v1.PsalmMetadata
	1,  // 23: bible.v1.GetBiblicalReferenceResponse.chapters:type_name -> bible.v1.BookChapter
	2,  // 24: bible.v1.GetBiblicalReferenceResponse.verses:type_name -> bible.v1.BookVerse
	3,  // 25: bible.v1.GetBiblicalReferenceResponse.footnotes:type_name -> bible.v1.BookFootnote
	4,  // 26: bible.v1.GetBiblicalReferenceResponse.headings:type_name -> bible.v1.BookHeading
	5,  // 27: bible.v1.GetBiblicalReferenceResponse.references:type_name -> bible.v1.BookReference
	6,  // 28: bible.v1.GetBiblicalReferenceResponse.psalm_metadata:type_name -> bible.v1.PsalmMetadata
	7,  // 29: bible.v1.BookService.GetAllBook:input_type -> bible.v1.GetAllBookRequest
	9,  // 30: bible.v1.BookService.GetOneBook:input_type -> bible.v1.GetOneBookRequest
	11, // 31: bible.v1.BookService.GetOneChapter:input_type -> bible.v1.GetOneChapterRequest
	13, // 32: bible.v1.BookService.GetOneChapterText:input_type -> bible.v1.GetOneChapterTextRequest
	15, // 33: bible.v1.BookService.GetOneChapterHtml:input_type -> bible.v1.GetOneChapterHtmlRequest
	17, // 34: bible.v1.BookService.GetBiblicalReference:input_type -> bible.v1.GetBiblicalReferenceRequest
	19, // 35: bible.v1.BookService.GetBiblicalReferenceText:input_type -> bible.v1.GetBiblicalReferenceTextRequest
	21, // 36: bible.v1.BookService.GetBiblicalReferenceHtml:input_type -> bible.v1.GetBiblicalReferenceHtmlRequest
	8,  // 37: bible.v1.BookService.GetAllBook:output_type -> bible.v1.GetAllBookResponse
	10, // 38: bible.v1.BookService.GetOneBook:output_type -> bible.v1.GetOneBookResponse
	12, // 39: bible.v1.BookService.GetOneChapter:output_type -> bible.v1.GetOneChapterResponse
	14, // 40: bible.v1.BookService.GetOneChapterText:output_type -> bible.v1.GetOneChapterTextResponse
	16, // 41: bible.v1.BookService.GetOneChapterHtml:output_type -> bible.v1.GetOneChapterHtmlResponse
	18, // 42: bible.v1.BookService.GetBiblicalReference:output_type -> bible.v1.GetBiblicalReferenceResponse
	20, // 43: bible.v1.BookService.GetBiblicalReferenceText:output_type -> bible.v1.GetBiblicalReferenceTextResponse
	22, // 44: bible.v1.BookService.GetBiblicalReferenceHtml:output_type -> bible.v1.GetBiblicalReferenceHtmlResponse
	37, // [37:45] is the sub-list for method output_type
	29, // [29:37] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_bible_v1_book_proto_init() }
func file_bible_v1_book_proto_init() {
	if File_bible_v1_book_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bible_v1_book_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Book); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bible_v1_book_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*BookChapter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bible_v1_book_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*BookVerse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bible_v1_book_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*BookFootnote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bible_v1_book_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*BookHeading); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bible_v1_book_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*BookReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bible_v1_book_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PsalmMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bible_v1_book_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllBookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bible_v1_book_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllBookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bible_v1_book_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetOneBookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bible_v1_book_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetOneBookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bible_v1_book_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetOneChapterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bible_v1_book_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetOneChapterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bible_v1_book_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GetOneChapterTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bible_v1_book_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*GetOneChapterTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bible_v1_book_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GetOneChapterHtmlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bible_v1_book_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetOneChapterHtmlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bible_v1_book_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetBiblicalReferenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bible_v1_book_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*GetBiblicalReferenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bible_v1_book_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GetBiblicalReferenceTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bible_v1_book_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*GetBiblicalReferenceTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bible_v1_book_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*GetBiblicalReferenceHtmlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bible_v1_book_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*GetBiblicalReferenceHtmlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bible_v1_book_proto_msgTypes[3].OneofWrappers = []any{}
	file_bible_v1_book_proto_msgTypes[5].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bible_v1_book_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bible_v1_book_proto_goTypes,
		DependencyIndexes: file_bible_v1_book_proto_depIdxs,
		MessageInfos:      file_bible_v1_book_proto_msgTypes,
	}.Build()
	File_bible_v1_book_proto = out.File
	file_bible_v1_book_proto_rawDesc = nil
	file_bible_v1_book_proto_goTypes = nil
	file_bible_v1_book_proto_depIdxs = nil
}
