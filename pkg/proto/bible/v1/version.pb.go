// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: bible/v1/version.proto

package biblev1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Version struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Version ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Version code
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	// Version name
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Version language
	Language string `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Version source
	Source string `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
	// Version format type
	FormatType string `protobuf:"bytes,6,opt,name=format_type,json=formatType,proto3" json:"format_type,omitempty"`
	// Version source URL
	SourceUrl string `protobuf:"bytes,7,opt,name=source_url,json=sourceUrl,proto3" json:"source_url,omitempty"`
	// Version has old testament
	HasOldTestament bool `protobuf:"varint,8,opt,name=has_old_testament,json=hasOldTestament,proto3" json:"has_old_testament,omitempty"`
	// Version has new testament
	HasNewTestament bool `protobuf:"varint,9,opt,name=has_new_testament,json=hasNewTestament,proto3" json:"has_new_testament,omitempty"`
	// Version has apocrypha
	HasApocrypha bool `protobuf:"varint,10,opt,name=has_apocrypha,json=hasApocrypha,proto3" json:"has_apocrypha,omitempty"`
	// Version creation time
	// Stored in UTC and follows RFC 3339 format
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Version last update time
	// Stored in UTC and follows RFC 3339 format
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Version) Reset() {
	*x = Version{}
	mi := &file_bible_v1_version_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_version_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_bible_v1_version_proto_rawDescGZIP(), []int{0}
}

func (x *Version) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Version) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Version) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Version) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Version) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Version) GetFormatType() string {
	if x != nil {
		return x.FormatType
	}
	return ""
}

func (x *Version) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

func (x *Version) GetHasOldTestament() bool {
	if x != nil {
		return x.HasOldTestament
	}
	return false
}

func (x *Version) GetHasNewTestament() bool {
	if x != nil {
		return x.HasNewTestament
	}
	return false
}

func (x *Version) GetHasApocrypha() bool {
	if x != nil {
		return x.HasApocrypha
	}
	return false
}

func (x *Version) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Version) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetAllVersionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Language filter (optional - indexed in Prisma)
	Language *string `protobuf:"bytes,1,opt,name=language,proto3,oneof" json:"language,omitempty"`
	// Source filter (optional - indexed in Prisma)
	Source *string `protobuf:"bytes,2,opt,name=source,proto3,oneof" json:"source,omitempty"`
	// Format type filter (optional - indexed in Prisma)
	FormatType    *string `protobuf:"bytes,3,opt,name=format_type,json=formatType,proto3,oneof" json:"format_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllVersionRequest) Reset() {
	*x = GetAllVersionRequest{}
	mi := &file_bible_v1_version_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllVersionRequest) ProtoMessage() {}

func (x *GetAllVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_version_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllVersionRequest.ProtoReflect.Descriptor instead.
func (*GetAllVersionRequest) Descriptor() ([]byte, []int) {
	return file_bible_v1_version_proto_rawDescGZIP(), []int{1}
}

func (x *GetAllVersionRequest) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *GetAllVersionRequest) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

func (x *GetAllVersionRequest) GetFormatType() string {
	if x != nil && x.FormatType != nil {
		return *x.FormatType
	}
	return ""
}

type GetAllVersionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Version list
	Versions      []*Version `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllVersionResponse) Reset() {
	*x = GetAllVersionResponse{}
	mi := &file_bible_v1_version_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllVersionResponse) ProtoMessage() {}

func (x *GetAllVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_version_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllVersionResponse.ProtoReflect.Descriptor instead.
func (*GetAllVersionResponse) Descriptor() ([]byte, []int) {
	return file_bible_v1_version_proto_rawDescGZIP(), []int{2}
}

func (x *GetAllVersionResponse) GetVersions() []*Version {
	if x != nil {
		return x.Versions
	}
	return nil
}

type GetOneVersionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Version code (required - part of unique constraint)
	VersionCode string `protobuf:"bytes,1,opt,name=version_code,json=versionCode,proto3" json:"version_code,omitempty"`
	// Language code (required - part of unique constraint)
	Language string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	// Source (required - part of unique constraint)
	Source string `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	// Format type (required - part of unique constraint)
	FormatType    string `protobuf:"bytes,4,opt,name=format_type,json=formatType,proto3" json:"format_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOneVersionRequest) Reset() {
	*x = GetOneVersionRequest{}
	mi := &file_bible_v1_version_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOneVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneVersionRequest) ProtoMessage() {}

func (x *GetOneVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_version_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneVersionRequest.ProtoReflect.Descriptor instead.
func (*GetOneVersionRequest) Descriptor() ([]byte, []int) {
	return file_bible_v1_version_proto_rawDescGZIP(), []int{3}
}

func (x *GetOneVersionRequest) GetVersionCode() string {
	if x != nil {
		return x.VersionCode
	}
	return ""
}

func (x *GetOneVersionRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *GetOneVersionRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *GetOneVersionRequest) GetFormatType() string {
	if x != nil {
		return x.FormatType
	}
	return ""
}

type GetOneVersionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Version object
	Version       *Version `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOneVersionResponse) Reset() {
	*x = GetOneVersionResponse{}
	mi := &file_bible_v1_version_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOneVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneVersionResponse) ProtoMessage() {}

func (x *GetOneVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_version_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneVersionResponse.ProtoReflect.Descriptor instead.
func (*GetOneVersionResponse) Descriptor() ([]byte, []int) {
	return file_bible_v1_version_proto_rawDescGZIP(), []int{4}
}

func (x *GetOneVersionResponse) GetVersion() *Version {
	if x != nil {
		return x.Version
	}
	return nil
}

var File_bible_v1_version_proto protoreflect.FileDescriptor

const file_bible_v1_version_proto_rawDesc = "" +
	"\n" +
	"\x16bible/v1/version.proto\x12\bbible.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\xa8\x03\n" +
	"\aVersion\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1a\n" +
	"\blanguage\x18\x04 \x01(\tR\blanguage\x12\x16\n" +
	"\x06source\x18\x05 \x01(\tR\x06source\x12\x1f\n" +
	"\vformat_type\x18\x06 \x01(\tR\n" +
	"formatType\x12\x1d\n" +
	"\n" +
	"source_url\x18\a \x01(\tR\tsourceUrl\x12*\n" +
	"\x11has_old_testament\x18\b \x01(\bR\x0fhasOldTestament\x12*\n" +
	"\x11has_new_testament\x18\t \x01(\bR\x0fhasNewTestament\x12#\n" +
	"\rhas_apocrypha\x18\n" +
	" \x01(\bR\fhasApocrypha\x129\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xa2\x01\n" +
	"\x14GetAllVersionRequest\x12\x1f\n" +
	"\blanguage\x18\x01 \x01(\tH\x00R\blanguage\x88\x01\x01\x12\x1b\n" +
	"\x06source\x18\x02 \x01(\tH\x01R\x06source\x88\x01\x01\x12$\n" +
	"\vformat_type\x18\x03 \x01(\tH\x02R\n" +
	"formatType\x88\x01\x01B\v\n" +
	"\t_languageB\t\n" +
	"\a_sourceB\x0e\n" +
	"\f_format_type\"F\n" +
	"\x15GetAllVersionResponse\x12-\n" +
	"\bversions\x18\x01 \x03(\v2\x11.bible.v1.VersionR\bversions\"\x8e\x01\n" +
	"\x14GetOneVersionRequest\x12!\n" +
	"\fversion_code\x18\x01 \x01(\tR\vversionCode\x12\x1a\n" +
	"\blanguage\x18\x02 \x01(\tR\blanguage\x12\x16\n" +
	"\x06source\x18\x03 \x01(\tR\x06source\x12\x1f\n" +
	"\vformat_type\x18\x04 \x01(\tR\n" +
	"formatType\"D\n" +
	"\x15GetOneVersionResponse\x12+\n" +
	"\aversion\x18\x01 \x01(\v2\x11.bible.v1.VersionR\aversion2\xed\x01\n" +
	"\x0eVersionService\x12e\n" +
	"\rGetAllVersion\x12\x1e.bible.v1.GetAllVersionRequest\x1a\x1f.bible.v1.GetAllVersionResponse\"\x13\x82\xd3\xe4\x93\x02\r\x12\v/v1/version\x12t\n" +
	"\rGetOneVersion\x12\x1e.bible.v1.GetOneVersionRequest\x1a\x1f.bible.v1.GetOneVersionResponse\"\"\x82\xd3\xe4\x93\x02\x1c\x12\x1a/v1/version/{version_code}B\xfa\x02\x92A\xe1\x01\x12p\n" +
	"\x18Bible Version server API\x12\x18Bible Version server API\"3\n" +
	"\x0eDuckyMomo20012\x12!https://github.com/DuckyMomo200122\x051.0.0\"\x04/apiZY\n" +
	"W\n" +
	"\x06bearer\x12M\b\x02\x128Authentication token, prefixed by Bearer: Bearer <token>\x1a\rAuthorization \x02b\f\n" +
	"\n" +
	"\n" +
	"\x06bearer\x12\x00\n" +
	"\fcom.bible.v1B\fVersionProtoP\x01Z6github.com/v-bible/protobuf/pkg/proto/bible/v1;biblev1\xa2\x02\x03BXX\xaa\x02\bBible.V1\xca\x02\bBible\\V1\xe2\x02\x14Bible\\V1\\GPBMetadata\xea\x02\tBible::V1b\x06proto3"

var (
	file_bible_v1_version_proto_rawDescOnce sync.Once
	file_bible_v1_version_proto_rawDescData []byte
)

func file_bible_v1_version_proto_rawDescGZIP() []byte {
	file_bible_v1_version_proto_rawDescOnce.Do(func() {
		file_bible_v1_version_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_bible_v1_version_proto_rawDesc), len(file_bible_v1_version_proto_rawDesc)))
	})
	return file_bible_v1_version_proto_rawDescData
}

var file_bible_v1_version_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_bible_v1_version_proto_goTypes = []any{
	(*Version)(nil),               // 0: bible.v1.Version
	(*GetAllVersionRequest)(nil),  // 1: bible.v1.GetAllVersionRequest
	(*GetAllVersionResponse)(nil), // 2: bible.v1.GetAllVersionResponse
	(*GetOneVersionRequest)(nil),  // 3: bible.v1.GetOneVersionRequest
	(*GetOneVersionResponse)(nil), // 4: bible.v1.GetOneVersionResponse
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_bible_v1_version_proto_depIdxs = []int32{
	5, // 0: bible.v1.Version.created_at:type_name -> google.protobuf.Timestamp
	5, // 1: bible.v1.Version.updated_at:type_name -> google.protobuf.Timestamp
	0, // 2: bible.v1.GetAllVersionResponse.versions:type_name -> bible.v1.Version
	0, // 3: bible.v1.GetOneVersionResponse.version:type_name -> bible.v1.Version
	1, // 4: bible.v1.VersionService.GetAllVersion:input_type -> bible.v1.GetAllVersionRequest
	3, // 5: bible.v1.VersionService.GetOneVersion:input_type -> bible.v1.GetOneVersionRequest
	2, // 6: bible.v1.VersionService.GetAllVersion:output_type -> bible.v1.GetAllVersionResponse
	4, // 7: bible.v1.VersionService.GetOneVersion:output_type -> bible.v1.GetOneVersionResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_bible_v1_version_proto_init() }
func file_bible_v1_version_proto_init() {
	if File_bible_v1_version_proto != nil {
		return
	}
	file_bible_v1_version_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_bible_v1_version_proto_rawDesc), len(file_bible_v1_version_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bible_v1_version_proto_goTypes,
		DependencyIndexes: file_bible_v1_version_proto_depIdxs,
		MessageInfos:      file_bible_v1_version_proto_msgTypes,
	}.Build()
	File_bible_v1_version_proto = out.File
	file_bible_v1_version_proto_goTypes = nil
	file_bible_v1_version_proto_depIdxs = nil
}
